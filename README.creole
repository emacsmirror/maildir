= Maildir User Agent =

This is a maildir based mail user agent for Emacs. 

The basic idea is:

* you pull new files from a remote MTA's maildir with SSH/rsync
** requires that you can run shell commands at the remote MTA
* Emacs manages the local maildir using a cache directory

The maildir flow looks like this:

* the command //maildir-pull// - pulls any new files from the remote ssh in your maildir //new//
* //maildir-import-new// - is automatically run by //maildir-pull//
** it pulls files from //new// into the local cache
** and symlinks them to //cur//

Finally, you can use the command //maildir-list// to generate a buffer
with a listing of your current maildir in.


== Maildir management ==

The maildir is just a directory on your local machine. We make one
modifcation to the maildir standard which is to add a {{{cache}}}
directory to the maildir. The {{{cache}}} directory is used to keep a
record of every message file in the mailbox so that we can effectively
rsync. The message files in the //normal// maildir directories
(//cur// and //new//) are actually only symlinks into the cache
directory.

//All// mail you pull from the remote maildir will end up in the
cache, even if you never see it in your INBOX. This is because we do
some filtering on whether maildir.el can actually display your mail or
not. 

If you feel like you're not seeing email grep your cache directory for
a the mail. If you find a bug, obviously, report it to me.

== Commands ==

| //RET// | open the message                   |
| //n//   | next line                          |
| //p//   | previous line                      |
| //TAB// | next field                         |
| //+//   | make a new maildir                 |
| //d//   | delete the message                 |
| //m//   | move the message to another folder |
| //q//   | quit                               |
| //r//   | pull from the remote and refresh   |
 

== Todo ==

* implement SEEN/READ/REPLIED state
** handling SEEN seems easy, just add something on open
** handling reply is harder, have to add a hook to mail send
*** and some reference in the reply mail buffer to the original message filename?

* handle {{{mail-header-extract}}} failure with headers without spaces
** Just report it as a bug in Emacs?

* allow choosing which maildir to list
** have maildir-list take an optional maildir directory

* shard the storage of the mails in the cache directory.

* actorize the pull and index into a child-emacs
** so that it doesn't slow anything down

* add an Elnode app that we can run on the remote for delivering mail
** this will replace rsync
** a query interface to find all files since a particular date
** POST /maildir/query since=YYYYMMDDHHMMSS
** the client interface can then track the youngest file we have
*** and ask for any files since

* add an isearch mode to allow isearch to specify things for commands to work on
** the idea is you do an isearch to highlight some term
** and then press some command string, M-m for example (for move) or M-d for delete
** and everything highlighted would be deleted
** isearch highlighted text is something to do with `isearch-lazy-highlight-overlays'
** this conversation with forcer where we discuss approaches to overriding isearch's mode map for maildir

{{{
13:11 <nicferrier> forcer: but I think what I really need is a way
                   to add commands to isearch
13:12 <nicferrier> there's a mode map I can get at... but I wonder
                   how I could alter that just for the mode I'm
                   interested in.
13:12 <nicferrier> hum
13:12 <nicferrier> make the isearch mode map buffer local?
13:13 <forcer> That would work
13:13 <forcer> What isearch does is this:
13:13 <forcer>   (setq overriding-terminal-local-map
               isearch-mode-map)
13:13 <forcer>   (run-hooks 'isearch-mode-hook)
13:14 <forcer> So you could in isearch-mode-hook set
               overriding-terminal-local-map to your own keymap
               which has isearch-mode-map as a parent
}}}
